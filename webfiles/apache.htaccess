###############################################################
# Option 1) Use apache mod_deflate to compress files on-the-fly
#
#  Pros:
#    - Server will negotiate whether compression is used, hence
#      better browser compatibility
#    - No need to change extensions on files
#  Cons:
#    - Puts a CPU load on the webserver
###############################################################

# compress text, html, javascript, css, xml:
AddOutputFilterByType DEFLATE text/plain
AddOutputFilterByType DEFLATE text/html
AddOutputFilterByType DEFLATE text/xml
AddOutputFilterByType DEFLATE text/css
AddOutputFilterByType DEFLATE application/xml
AddOutputFilterByType DEFLATE application/xhtml+xml
AddOutputFilterByType DEFLATE application/rss+xml
AddOutputFilterByType DEFLATE application/javascript
AddOutputFilterByType DEFLATE application/x-javascript
AddOutputFilterByType DEFLATE application/json

# compress disk images
<FilesMatch "\.(image|img|dsk|qed)$">
SetOutputFilter DEFLATE
</FilesMatch>

###############################################################
# Option 2) Use pre-compressed gzip files
#
#  Pros:
#    - No CPU overhead on the server
#    - Saves disk space on web host
#  Cons:
#    - Only works if browser natively supports compression
#      (no fallback)
#    - Need to modify URLs in web app to use ".gz"
###############################################################

AddEncoding gzip gz